{"version":3,"sources":["components/Home.jsx","components/About.jsx","components/Contact.jsx","components/CustomNavbar.jsx","components/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateNews","bind","assertThisInitialized","state","fetch","then","result","json","console","log","react_default","a","createElement","Grid","className","PageHeader","Row","Col","xs","sm","Image","src","placeholder","circle","md","Button","onClick","Component","About","Contact","CustomNavbar","Navbar","default","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","href","componentClass","Link","to","Footer","id","App","HashRouter","CustomNavbar_CustomNavbar","Switch","Route","exact","path","component","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e8da02d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Jumbotron, Grid, Row, Col, Image, Button, PageHeader } from \"react-bootstrap\";\r\nimport './style/Home.css';\r\n\r\nexport default class Home extends Component {\r\n  constructor (props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n  }\r\n\r\n    generateNews = this.generateNews.bind(this)\r\n\r\n     generateNews(){\r\n       fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=878b3482fff648a9a468d877d578e159\")\r\n        .then((result) => {\r\n            return result.json();\r\n        })\r\n        .then((json) =>{\r\n            console.log(json);\r\n        })\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.generateNews();\r\n      }\r\n  \r\n  render() {\r\n    return (\r\n      <Grid className=\"page-layout\">\r\n          {/* <Jumbotron>\r\n              <Image className=\"image-jumbotron\" src=\"assets/SpaceIIMG.jpg\" responsive />\r\n              <h2>Welcome to my profile-page</h2>\r\n              <p>This is how your build a website with react router and bootstrap</p>\r\n              <Link to=\"/about\">\r\n            <Button bsStyle=\"primary\"> About </Button>\r\n          </Link>\r\n          </Jumbotron> */}\r\n          <div className=\"container-fluid\">\r\n                <div className=\"container-banner\">\r\n\r\n                </div>\r\n          </div>\r\n          <PageHeader>\r\n          {/* <Image className=\"image-jumbotron\" src=\"assets/SpaceIIMG.jpg\" responsive /> */}\r\n          <h1>Stephen Sarfo</h1>\r\n          </PageHeader>\r\n          <Row className=\"show-grid test-center\">\r\n            <Col xs={12} sm={4} className=\"person-wrapper\">\r\n                <Image src=\"assets/linkdenProf.jpg\" placeholder=\"Image here\" circle className=\"profile-pic\"/>\r\n                <h3>Steve</h3>\r\n                <p>He wants to be a developer.</p>\r\n            </Col>\r\n            <Col sm={6} md={3} className=\"news-box\">\r\n                <h4>News Feed</h4>\r\n                <Button onClick={this.generateNews}>News</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Stephen's about page</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { PageHeader, Grid, Row, Col, Image } from \"react-bootstrap\";\r\nimport './style/Contact.css';\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n        <PageHeader className=\"header\">\r\n        Contacts <small>Where to find me</small>\r\n      </PageHeader>\r\n\r\n        <h3>Email</h3>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavItem} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { HashRouter} from  'react-router-dom';\r\nimport './style/CustomNavbar.css';\r\n\r\nexport default class CustomNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar default collapseOnSelect>\r\n        <Navbar.Header>\r\n            <Navbar.Brand>\r\n                    Stephen Page\r\n            </Navbar.Brand>\r\n        </Navbar.Header>\r\n        <Navbar.Toggle/>\r\n        <Navbar.Collapse>\r\n        <Nav pullRight>\r\n              <NavItem eventKey={1}  href=\"/\" componentClass={Link} to=\"/\">Home</NavItem>\r\n              <NavItem eventKey={2}  href=\"/about\" componentClass={Link} to=\"/about\" >About</NavItem>\r\n              <NavItem eventKey={3}  href=\"/contact\" componentClass={Link} to=\"/contact\">Contact</NavItem>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style/Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <hr id=\"hr-top\"/>\r\n        <div className=\"link-footer\">\r\n        <div className=\"links\">\r\n        <span className=\"home-link\"><Link to=\"/\" >Home</Link></span>\r\n        <span className=\"contact-link\"><Link to=\"/contact\" >Contact Me</Link></span>  \r\n        <span className=\"about-link\"><Link to=\"/about\" >About Me</Link></span>\r\n        </div>\r\n        </div>\r\n        {/* <hr id=\"hr-bottom\"/> */}\r\n        <div className=\"footer-copy\">\r\n         <em>&copy; Stephen web-page </em> \r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Navbar from './components/CustomNavbar';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar/>\n          <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/about\"component={About}/>\n          <Route path=\"/contact\" component={Contact}/>\n          </Switch>\n          <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}